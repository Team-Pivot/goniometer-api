DROP TABLE IF EXISTS Goniometer;
DROP TABLE IF EXISTS Measurement;
DROP TABLE IF EXISTS MeasurementType;
DROP TABLE IF EXISTS JointType;
DROP TABLE IF EXISTS ClinicAccess;
DROP TABLE IF EXISTS Admin;
DROP TABLE IF EXISTS Client;
DROP TABLE IF EXISTS Clinic;

CREATE TABLE Clinic (
  id BINARY(16) PRIMARY KEY,
  name VARCHAR(255),
  street VARCHAR(255),
  zipcode CHAR(10),
  state VARCHAR(32), -- there's probably a better way to do this
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE(name, street, zipcode)
);

CREATE TABLE Client (
  id BINARY(16) PRIMARY KEY,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  birth_date DATE NOT NULL,
  ehr_link VARCHAR(255),
  clinic BINARY(16) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_client_clinic FOREIGN KEY (clinic) REFERENCES Clinic(id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MeasurementType (
  name VARCHAR(255) PRIMARY KEY
);

CREATE TABLE JointType (
  name VARCHAR(255) PRIMARY KEY
);

CREATE TABLE Measurement (
  id BINARY(16) PRIMARY KEY,
  angle DECIMAL(5, 2) NOT NULL,
  end_angle DECIMAL(5, 2),
  joint_type VARCHAR(255) NOT NULL,
  measurement_type VARCHAR(255) NOT NULL,
  client BINARY(16) NOT NULL,
  clinic BINARY(16) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  -- deleted BOOLEAN DEFAULT 0
  CONSTRAINT fk_measure_m_type FOREIGN KEY (measurement_type) REFERENCES MeasurementType(name)
    ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT fk_measure_j_type FOREIGN KEY (joint_type) REFERENCES JointType(name)
    ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT fk_measure_client FOREIGN KEY (client) REFERENCES Client(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_measure_clinic FOREIGN KEY (clinic) REFERENCES Clinic(id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Admin (
  id BINARY(16) PRIMARY KEY,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE ClinicAccess (
  admin BINARY(16) NOT NULL,
  clinic BINARY(16) NOT NULL,
  permission_level TINYINT DEFAULT 0,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (admin, clinic),
  CONSTRAINT fk_access_admin FOREIGN KEY (admin) REFERENCES Admin(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT fk_access_clinic FOREIGN KEY (clinic) REFERENCES Clinic(id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Goniometer (
  id BINARY(16) PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  clinic BINARY(16) NOT NULL,
  last_used DATETIME,
  -- battery_level INT DEFAULT 100,
  created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_goniometer_clinic FOREIGN KEY (clinic) REFERENCES Clinic(id)
);
